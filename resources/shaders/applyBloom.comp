#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

#include "global.inc"

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set=1, binding = 0, r11f_g11f_b10f) uniform image2D target;
layout(set=1, binding = 1) uniform texture2D bloomTexture;

layout(push_constant) uniform PushConstants {
	float bloomStrength;
};

void main(){
	ivec2 iUV = ivec2(gl_GlobalInvocationID.xy);
	ivec2 targetResolution = imageSize(target);

	if(any(greaterThan(iUV, targetResolution))){
		return;
	}

	vec2 uv = (iUV + 0.5f) / vec2(targetResolution);
	vec3 bloom = textureLod(sampler2D(bloomTexture, g_sampler_linearClamp), uv, 0).rgb;
	vec3 scene = imageLoad(target, iUV).rgb;

	vec3 color = scene + bloom * bloomStrength;
	//color = bloom;

	imageStore(target, iUV, vec4(color, 0));
}